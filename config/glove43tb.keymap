#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    #automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,ARROW
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        capslock {
            bindings = <&to_layer_0 CAPSLOCK>;
            key-positions = <11 10 12 13>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <30 31>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <31 32>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 33>;
        };

        quotation {
            bindings = <&kp SQT>;
            key-positions = <20 21>;
        };

        semi_colon {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        left_blacked {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <6 7>;
        };

        right_blacked {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        back_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <8 9>;
        };

        back_quote {
            bindings = <&kp GRAVE>;
            key-positions = <1 2>;
        };

        layer6 {
            bindings = <&lt_to_layer_0 6 K_CMENU>;
            key-positions = <34 35 36 37>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W             &kp E         &kp R         &kp T                                                       &kp Y        &kp U  &lt 5 I   &kp O                 &kp P
&kp A           &kp S             &kp D         &kp F         &kp G        &kp LS(LG(S))                   &kp COMMA      &kp H        &kp J  &kp K     &kp L                 &kp MINUS
&kp Z           &kp X             &kp C         &kp V         &kp B        &kp SLASH                       &kp PERIOD     &kp N        &kp M  &mkp MB1  &lt_to_layer_0 5 F24  &mkp MB2
&kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 2 SPACE  &lt_to_layer_0 3 LC(SPACE)      &kp BACKSPACE  &lt 1 ENTER                                         &kp DEL
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        FUNCTION {
            bindings = <
&kp F1           &kp F2       &kp F3    &kp F4      &kp F5                               &kp F6     &kp F7         &kp F8        &kp F9                &kp F10
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT  &trans       &kp GRAVE  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans       &trans    &trans      &trans       &kp F11      &kp F12    &kp SLASH  &kp SEMICOLON  &kp SQT       &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans           &trans       &trans    &trans      &trans       &trans       &trans     &trans                                                        &trans
            >;
        };

        NUM {
            bindings = <
&kp SLASH        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                                  &kp SLASH        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS
&kp ASTERISK     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS    &trans         &kp KP_NUMLOCK  &kp ASTERISK     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS
&kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD  &kp EQUAL      &trans          &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD
&trans           &trans           &trans           &trans           &trans      &trans         &trans          &trans                                                              &kp EQUAL
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &trans                       &trans    &kp PAGE_UP  &kp UP_ARROW    &kp PAGE_DOWN  &kp DEL
&kp HOME    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &trans      &trans  &kp HOME  &kp LEFT     &kp DOWN_ARROW  &kp RIGHT      &kp END
&trans      &trans          &trans          &trans           &trans   &trans      &trans  &trans    &trans       &trans          &trans         &trans
&trans      &trans          &trans          &trans           &trans   &trans      &trans  &trans                                                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
